package Sturt_up.com.com;

import java.util.*;

public class Calculator {
    private String example="";


    public float test1(){
        Scanner in = new Scanner(System.in);
        System.out.println("Введіть перше значення");
        int first = in.nextInt();
        System.out.println("Введіть друге  значення");
        int second = in.nextInt();
        System.out.println("Введіть оператор");
        String op = in.next();
         char operator = op.charAt(0);
         operator=whatOper(operator);

        Operators oper = new Operators(first, second, operator);
        return oper.result3();
    }
    public float test2() {
        System.out.println("Введіть приклад з двома значеннями");
        Scanner in = new Scanner(System.in);
        String example = in.nextLine();

        return split(example);
    }
    public float test3() {
    Scanner in = new Scanner(System.in);
    System.out.println("Введіть приклад");
     example = "24+6-4--3"/*in.nextLine()*/;
   //    example=in.nextLine();
    System.out.println(example);
    return gear3(example);
}



public float test4() {
    Scanner in = new Scanner(System.in);
    if (example.length()==0) {
        System.out.println("Введіть приклад");
        //   example="2/2+3*2+3*2*1+5";
         //   example="115-14+-4/2--11*11";
        example = in.nextLine();
        System.out.println(example);
    }
    return gear4(example);
}
    public float test5(){
        Help_Methods hlp=new Help_Methods();
        Scanner in =new Scanner(System.in);

        if (example.length()==0){
            System.out.println("Введіть приклад");
            example="(2*((3+6+1)+(2+2)))*4+(2+5+4*4)";
           //example=in.nextLine();
            example=checkExample(example);
            System.out.println(example);
        }
        return gear5(example);
    }

    private float split(String example) {
        char[] array = example.toCharArray();
        String f,s;f=s="";
        byte pos=-34;

        for (int i = 1; i < example.length(); i++) {
            if (array[i] == '-' || array[i] == '+' || array[i] == '*' || array[i] == '/') {
                pos = (byte) i;
                break;
            }
        }
        for (int i = 0; i < pos; i++)  f += Character.toString(array[i]);

        for (int i = pos; i < example.length(); i++) {
            if (i == pos) continue;
            s += Character.toString(array[i]);
        }

        if (pos==-34) return -1;
        Operators op = new Operators(Float.parseFloat(f), Float.parseFloat(s), array[pos]);
        return op.result3();}
    private char whatOper(char op) {
        Scanner in = new Scanner(System.in);
        if ((op=='-') || (op=='+') || (op=='*') || (op=='/'))  //  System.out.println("Good");
            return op;
         else {
            //   System.out.println("Somting bad was happened");
               System.out.println("Введіть оператор");
            op = in.next().charAt(0);
           op= whatOper(op);
        }
        return op;  }

    private int[] countSign(String str) {
        Help_Methods hlp = new Help_Methods();
        char[] chars = str.toCharArray();

        int count = 0;
        for (int i = 1, p = i - 1; i < str.length(); i++, p++) {
            if ((chars[i] == '+' || chars[i] == '-' || chars[i] == '*' || chars[i] == '/') && (chars[p] != '+' && chars[p] != '-' && chars[p] != '*' && chars[p] != '/')) {
                count++;
            }
        }
        int[] array = new int[count];

        for (int i = 1, p = i - 1, c = 0; c < array.length; i++, p++) {
            if ((chars[i] == '+' || chars[i] == '-' || chars[i] == '*' || chars[i] == '/') && (chars[p] != '+' && chars[p] != '-' && chars[p] != '*' && chars[p] != '/')) {
                array[c] = i;
                c++;
            }
        }
        return array;
    }
    private float[] arrFromNumber(int[] array, String example) {
        Help_Methods hlp = new Help_Methods();
        char[] ex = example.toCharArray();
        float[] countNumber = new float[array.length + 1];
        String number;
        number = "";
        for (int i = 0; i <= array.length; i++) {
            //  System.out.println("i-->"+i);
            if (i == 0)//for first number
            {
                number = "";
                for (int j = 0; j < array[i]; j++) {
                    if (ex[j]!=')' && ex[j]!='(')
                    number += Character.toString(ex[j]);
                }
            } else if (array.length >= 2 && i != 0)//if is more than two number in example
            {
                if (i == array.length) {
                    number = "";
                    for (int j =  (array[i - 1] + 1); j < example.length(); j++) {
                        if (ex[j]!=')' && ex[j]!='(')
                        number += Character.toString(ex[j]);
                    }


                } else {
                    number = "";
                    for (int j =  (array[i - 1] + 1); j < array[i]; j++) {
                        if (ex[j]!=')' && ex[j]!='(')
                        number += Character.toString(ex[j]);
                    }
                }
            } else {//if is only two number on example
                number = "";
                for (int j = array[i - 1] + 1; j < example.length(); j++) {
                    number += Character.toString(ex[j]);
                }
            }
            //System.out.println("number-->"+number);
            countNumber[i] = Float.parseFloat(number);
           //   System.out.println("Число -->"+countNumber[i]);

        }
        return countNumber;
    }

private float gear3(String example) {
    Help_Methods hlp = new Help_Methods();
    int[] arraySign = countSign(example);
    float[] arrayNum = arrFromNumber(countSign(example), example);
    char[] arrayS = hlp.giveSign(arraySign, example);
    return result(arrayNum, arrayS);}


private float gear4(String example) {
    Help_Methods hlp=new Help_Methods();
    int[] array = countSign(example);
    float[] arrayNum = arrFromNumber(array, example);
    char[] arraySign = hlp.giveSign(array, example);
    if (arraySign.length<=1)return split(example);
    Priority_Of_Processing piop=new Priority_Of_Processing(arrayNum,arraySign);
    return piop.result(); }


    private float gear5(String example){
        Help_Methods hlp=new Help_Methods();
        int[] array = countSign(example);
        System.out.println("arrayNum");
        float[] arrayNum = arrFromNumber(array, example);
        System.out.println("arraySign");
        char[] arraySign = hlp.giveSign(array, example);


        Priority_Of_Processing piop=new Priority_Of_Processing(arrayNum,arraySign);
        if (arraySign.length==1)return piop.result();
        return piop.result_2(example);

    }

    public float gear_1(float[] arrayN,char[] arrayC) {return result(arrayN, arrayC);}
    public float gear_2(String op){return gear4(op);}

private float result(float[] arrayNum, char[] arraySign) {
float result = 0;
for (int i = 0, n = 1; i < arrayNum.length - 1; i++, n++) {
    if (i == 0) result = new Operators(arrayNum[i], arrayNum[n], arraySign[i]).result3();
    else result = new Operators(result, arrayNum[n], arraySign[i]).result3();
}
return result;
}

    private String checkExample(String op){
Help_Methods hlp=new Help_Methods();
        boolean isBrackets=false;
        boolean isCountSign=false;


        char[] carray=op.toCharArray();
        if ((carray[0]=='(' && carray[op.length()-1]==')') &&
                (((int[])hlp.Brackets(example)[0]).length==((int[])hlp.Brackets(example)[1]).length) && ((int[])hlp.Brackets(example)[0]).length==1)
        {
            op= hlp.cutStr(op,0,op.length()-1);
            System.out.println(op);

        }

        if (((int[])hlp.Brackets(op)[0]).length==((int[])hlp.Brackets(op)[1]).length)isBrackets=true;
        if (arrFromNumber(countSign(op),op).length==countSign(op).length+1)isCountSign=true;




        //    System.out.println("isCountSign-->"+isCountSign);
        //    System.out.println("isBrackets-->"+isBrackets);

        return op;
    }
}


